깊이 그림자
깊이값 비교해서 그려준다 .

--> 빛을 기준으로 표현이 된다.
가려진 부분에 대해서 어둡게 표현하는 형태의 작업

Shadow타겟을 따로 만들어야된다. (새로운 타겟이 필요해짐)
깊이그림자를 그린다면 프레임드랍이 생긴다..( two pass rendering )

그림자가 필요한 친구들은 새로운 렌더그룹에 넣어줘야한다.
2개의 배열에 공유시킨다.
객체들을 그리기 전에 --> 쉐도우 그룹이 먼저 그려져야 한다.

쉐도우 타겟들을 그릴 땐 장치에 쉐도우타겟이 세팅되어있어야 한다.
쉐도우타겟을 하나 더 만들어놓고 그 쉐도우 타겟에 배열의 객체들을 그린다.

투영행렬 그대로 사용해도 됨
카메라기준이 아니라 빛의 기준으로 변환해야됨 --> 광원 기준, 이걸 View행렬을 해야한다 .

뷰스페이스변환행렬이 광원기준. --> 거대한 점광원을 설치하는게 거리계산을 하기가 편하다.
(라이트스페이스변환)

이 상태에서 투영변환까지 수행을 한다.
0~1사이로 표현된 깊이값들이 표현이 된다 --> 이 것을 타겟에 저장해준다.
(뷰스페이스까지만 했으면 near~far, 투영행렬까지만 하면 0~far) -- [1]

zenable은 켜놓고 그릴거다 (write는 필요 없다.)

쉐도우 타겟 완료

-------------------------------------
픽셀의 월드위치를 구한다 -- 장면 전체 ( 빛 연산할 때 해봄 )

이 픽셀의 월드 위치를 구하고 최종 픽셀과 광원스페이스로 변환한 깊이(위에서 변환한 단계 까지--[1])를 비교해야한다. 
(픽셀 --> 월드 --> 광원 --> 쉐도우타겟과 비교)


렌더그룹 쉐도우 추가 -> 그림자가 그려지는 개체들 다 추가 -> 쉐도우 배열을 먼저 돌면서 실제 변환을 해서 깊이 저장

--> 쉐도우 타겟 변환을 할 땐 광원스페이스변환으로 작업 --> 쉐도우 그리면서 뒤에 애들 안그려짐 --> 일반적으로 그린다 

--> 화면에 그려야 하는 시점에 (이펙트 전) 본인 픽셀을 월드스페이스로 역변환 후 광원스페이스 변환행렬을 곱해서
쉐도우타겟과 같은 스페이스에서 비교한다. 쉐도우보다 깊이가 큰 경우 색깔을 반정도 줄여서 까뭇하게 표현한다.
